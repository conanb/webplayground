// Generated by CoffeeScript 1.9.1
var canvas, context, draw, findClosest, generate, image, imageData, img, points;

canvas = document.getElementsByTagName('canvas')[0];

context = canvas.getContext('2d');

points = [];

image = context.createImageData(canvas.width, canvas.height);

img = new Image;

imageData = null;

img.onload = function() {
  var ctx, t;
  t = document.createElement('canvas');
  t.width = img.width;
  t.height = img.height;
  ctx = t.getContext('2d');
  ctx.drawImage(img, 0, 0);
  imageData = ctx.getImageData(0, 0, img.width, img.height);
  generate();
  return requestAnimationFrame(draw);
};

img.src = 'smile.png';

findClosest = function(x, y) {
  var closest, closestDist, dist, i, len, point;
  closest = {
    r: 0,
    g: 0,
    b: 0
  };
  closestDist = canvas.width * canvas.height;
  for (i = 0, len = points.length; i < len; i++) {
    point = points[i];
    dist = (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y);
    if (dist < closestDist) {
      closestDist = dist;
      closest = point;
    }
  }
  return closest;
};

generate = function() {
  var i, imgIndex, ix, iy, n, point, results, x, y;
  points = [];
  results = [];
  for (n = i = 0; i <= 512; n = ++i) {
    x = Math.random();
    y = Math.random();
    ix = Math.floor(img.width * x);
    iy = Math.floor(img.height * y);
    imgIndex = (ix + iy * img.width) * 4;
    point = {
      index: n,
      x: canvas.width * x,
      y: canvas.height * y,
      r: imageData.data[imgIndex + 0],
      g: imageData.data[imgIndex + 1],
      b: imageData.data[imgIndex + 2],
      a: imageData.data[imgIndex + 3]
    };
    results.push(points.push(point));
  }
  return results;
};

draw = function() {
  var h, i, index, j, ms, point, ref, ref1, start, w, x, y;
  start = Date.now();
  w = canvas.width - 1;
  h = canvas.height - 1;
  for (x = i = 0, ref = w; 0 <= ref ? i <= ref : i >= ref; x = 0 <= ref ? ++i : --i) {
    for (y = j = 0, ref1 = h; 0 <= ref1 ? j <= ref1 : j >= ref1; y = 0 <= ref1 ? ++j : --j) {
      point = findClosest(x, y);
      index = (x + y * canvas.width) * 4;
      image.data[index + 0] = point.r;
      image.data[index + 1] = point.g;
      image.data[index + 2] = point.b;
      image.data[index + 3] = point.a;
    }
  }
  ms = Date.now() - start;
  context.putImageData(image, 0, 0);
  context.font = '18px consolas';
  context.fillStyle = 'black';
  context.fillText(ms + "ms", 20, 20);
  context.fillText("R to regenerate", 20, 40);
  return requestAnimationFrame(draw);
};

document.onkeyup = function(e) {
  if (e.keyCode === 'R'.charCodeAt(0)) {
    return generate();
  }
};
